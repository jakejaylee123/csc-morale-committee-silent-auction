// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlserver"

    // Example: sqlserver://HOST[:PORT];database=DATABASE;user=USER;password=PASSWORD;encrypt=true
    url = env("PRISMA_DATABASE_URL")
}

model Bidder {
    id               Int       @id @default(autoincrement())
    displayName      String
    firstName        String
    lastName         String
    windowsId        String
    enabled          Boolean
    enabledAt        DateTime?
    enabledBy        Int?
    enabledByBidder  Bidder?   @relation(name: "enablingBidder", fields: [enabledBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
    disabledAt       DateTime?
    disabledBy       Int?
    disabledByBidder Bidder?   @relation(name: "disablingBidder", fields: [disabledBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
    updatedAt        DateTime?
    updatedBy        Int?
    updatedByBidder  Bidder?   @relation(name: "updatingBidder", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
    emailAddress     String?

    bids             Bid[] @relation(name: "bidder")
    disqualifiedBids Bid[] @relation(name: "disqualifyingBidder")
    createdBids      Bid[] @relation(name: "creatingBidder")

    createdItems Item[] @relation(name: "creatingBidder")
    updatedBids  Item[] @relation(name: "updatingBidder")

    enabledBidders  Bidder[] @relation(name: "enablingBidder")
    disabledBidders Bidder[] @relation(name: "disablingBidder")
    updatedBidders  Bidder[] @relation(name: "updatingBidder")

    disabledEvent Event[] @relation(name: "disablingBidder")

    adminAssignment AdministrationAssignment? @relation(name: "adminBidder")
}

model AdministrationAssignment {
    id       Int    @id @default(autoincrement())
    bidderId Int    @unique
    bidder   Bidder @relation(name: "adminBidder", fields: [bidderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Event {
    id          Int      @id @default(autoincrement())
    description String
    startsAt    DateTime
    endsAt      DateTime
    createdAt   DateTime
    createdBy   Int
    updatedAt   DateTime?
    updatedBy   Int?
    enabled     Boolean  @default(false)
    disabledAt   DateTime?
    disabledBy   Int?

    disabledByUser Bidder? @relation(name: "disablingBidder", fields: [disabledBy], references: [id], onDelete: NoAction, onUpdate: NoAction)

    bids Bid[]

    items Item[]
}

model CategoryCode {
    id          Int    @id @default(autoincrement())
    prefix      String @unique
    description String @unique

    items Item[]
}

model Item {
    id              Int          @id @default(autoincrement())
    eventId         Int
    event           Event        @relation(fields: [eventId], references: [id])
    itemNumber      Int
    itemDescription String
    minimumBid      Decimal?
    createdAt       DateTime     @default(now())
    createdBy       Int
    createdByUser   Bidder       @relation(name: "creatingBidder", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
    updatedAt       DateTime?     @default(now())
    updatedBy       Int?
    updatedByUser   Bidder?       @relation(name: "updatingBidder", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
    categoryId      Int
    category        CategoryCode @relation(fields: [categoryId], references: [id])
}

model Bid {
    id                 Int       @id @default(autoincrement())
    eventId            Int
    event              Event     @relation(fields: [eventId], references: [id])
    bidderId           Int
    bidder             Bidder    @relation(name: "bidder", fields: [bidderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    itemId             Int
    bidAmount          Decimal
    createdAt          DateTime
    createdBy          Int
    createdByUser      Bidder?   @relation(name: "creatingBidder", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
    disqualified       Boolean
    disqualifiedAt     DateTime?
    disqualifiedBy     Int?
    disqualifiedByUser Bidder?   @relation(name: "disqualifyingBidder", fields: [disqualifiedBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
